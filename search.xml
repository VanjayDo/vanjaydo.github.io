<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于php下实现异步计划任务的一种方法]]></title>
    <url>%2F2017%2F09%2F10%2F%E5%85%B3%E4%BA%8Ephp%E4%B8%8B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[前言在一个网络管理系统的实现过程中需要完成这样一个功能，老师在上课时通过交互界面将该教室的网络关闭，课程结束后系统将自动将教室网络开放，这有两方面的要求，首先是计划任务的实现：下课后自动恢复网络，这里使用循环来检查任务执行情况，因为如果全部都写到操作系统的计划任务中那就太繁重了（当然也可以只写一个系统的计划任务，将它和数据库结合起来实现，这是我最后采用的方法）；二就是老师提交“关闭网络”的请求时应当异步处理，因为计划任务是死循环，如果不进行异步处理则页面将永远处于加载状态直到用户强制阻断或任务执行结束。 具体过程计划任务唯一化因为一堂课上可能会多次切换网络状态，所以必须让当前教室的网络恢复计划任务唯一化，新的计划任务应当取代旧的，这里我使用文件flag的方式来实现：用$_SESSION[‘ID’]加上当前时间戳的方式来命名flag文件，$_SESSION[‘ID’]为用户ID，由于老师一堂课只能在一个教室上课，所以这是唯一的；当前时间戳（time()函数获取）精确到秒，足够保证用户在这个时间段内操作唯一。每一次生成计划任务时我们都生成这样一个文件保存在flag文件夹中，并将文件名传给任务函数，让它去检查这个文件状态，存在的话则任务有效，否则终止任务；相对的，生成新任务时，我们把flag文件夹中的所有以当前$_SESSION[‘ID’]开头的flag文件全部删除，再生成新的任务和flag，这样旧的任务就会失效，由此保证任务的唯一性。 异步这里是用fsockopen函数来实现异步，这样实现的好处就是有很大的自定义空间，例如相比于popen()函数的不可传递参数。 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//user.php//作用：用户交互界面，提交数据给set-network.php//代码如下：$url = "http://localhost:8081/tch/set-network.php";sock_get($url, $_GET["network"], $_GET["classroomName"],$endTimestamp);//fsockopen模拟get提交函数function sock_get($url, $network, $classroomName, $endTimestamp)&#123; //设置get提交的数据 $data = array( "network" =&gt; $network, "classroomName" =&gt; $classroomName, "endTimestamp" =&gt; $endTimestamp); $http_data = http_build_query($data); $info = parse_url($url); $fp = fsockopen($info["host"], $info["port"], $errno, $errstr, 3); $head = "GET " . $info['path'] . "?" . $http_data . " HTTP/1.0\r\n"; $head .= "Host: " . $info['host'] . ":" . $info['port'] . "\r\n"; $head .= "\r\n"; fputs($fp, $head); fclose($fp);&#125;//set-network.php//作用：从用户操作接收数据用来生成计划任务//代码如下：require "restore-network.php"//查找当前用户有无已存在的flag，有的话删除，即终止已存在的恢复网络计划任务$search = glob("./flags/" . $_SESSION['ID'] . "*");if ($search) &#123; foreach ($search as $item) &#123; unlink($item); &#125;&#125;$flag = "./flags/" . $_SESSION["ID"] . time() . ".flag";file_put_contents($flag, "", FILE_APPEND);$schedule = new restore_network();$schedule-&gt;keepWake($flag, $endTimestamp);//restore-network.php//作用：计划任务和恢复网络的功能实现//代码如下：ignore_user_abort();//关掉浏览器，PHP脚本也可以继续执行.set_time_limit(0);//设置不响应最长时间不受限制,让程序可以无限制的执行下去//定时任务函数，不断循环来定时执行任务function keepWake($flagFile, $endTimestamp)&#123; //当前时间戳比结束时间戳小则一直循环 while (time() &lt; $endTimestamp) &#123; // 定时任务终止条件:本任务的flag文件不存在 if (!file_exists($flagFile)) &#123; die('process terminated'); &#125; sleep(120); &#125; //删除flag文件 unlink($flagFile); //执行恢复网络功能函数，这不是重点，在此忽略函数内容 $this-&gt;restoreNet();&#125; 赘述尽管我最后用的并不是这种解决办法，因为考虑到万一web服务器软件宕掉的话那么这些计划任务都会丢失，我采用了将定时任务所需的参数存入数据库，再将一个php脚本写入操作系统计划任务中（如linux的crontab），每隔几分钟执行一遍，由这个脚本去数据库查询是否有到期的定时任务，有的话则调出数据进行执行，再数据库中相应的任务删除。整个过程可能考虑的不是很周到，只能算是一个实现目标的方法。]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php部分版本使用oci8拓展问题]]></title>
    <url>%2F2017%2F09%2F08%2Fphp%E9%83%A8%E5%88%86%E7%89%88%E6%9C%AC%E4%BD%BF%E7%94%A8oci8%E6%8B%93%E5%B1%95%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[前言最近在使用php实现从服务器Oracle数据库拉取数据表到本地mysql功能时遇到了这个问题：我使用的是xampp集成的php5.6.3版本，在它的php.ini配置文件中关于oci8拓展的配置是这样的：1extension=php_oci8_12c.dll ; Use with Oracle Database 12c Instant Client 从Oracle官网下载instantclient-basic-nt-12.2.0.1.0.zip拓展，解压后我把得到的instantclient_12_2目录移动到C:\Program Files下并加入环境变量，但是idea运行项目时一直在报:1PHP Warning: PHP Startup: Unable to load dynamic library &apos;C:\xampp\php\ext\php_oci8_12c.dll&apos; 导致oci8接口函数，如oci_connect等无法使用。 解决过程在把stack overflow翻了个遍之后找到了可行的解决办法——放弃php_oci8_12c.dll，将其更换为其他的版本。 去pecl下载其他版本的OCI8 extension下载地址，我选择了2.0.10版本，这是支持php5的最后一个版本，注：下载dll动态链接库文件需要点击”oci8-2.0.10.tgz (186.9kB)”链接后面的”（windows田字图形）DLL”链接，这是下载直达链接，根据自己的php版本下载合适的。 替换文件将解压后的下载文件移动到php拓展目录（即extension_dir）,然后在php.ini中加上1extension=php_oci8_11g.dll 去 Oracle官网下载相应的instant client V11，解压后把目录添加进系统变量。 检查cmd输入”PHP –ri oci8”1234567891011121314151617181920212223242526C:\WINDOWS\system32&gt;PHP --ri oci8结果显示：oci8OCI8 Support =&gt; enabledOCI8 DTrace Support =&gt; disabledOCI8 Version =&gt; 2.0.8Revision =&gt; $Id: f04114d4d67cffea4cdc2ed3b7f0229c2caa5016 $Oracle Run-time Client Library Version =&gt; 11.2.0.1.0Oracle Compile-time Instant Client Version =&gt; 11.2Directive =&gt; Local Value =&gt; Master Valueoci8.max_persistent =&gt; -1 =&gt; -1oci8.persistent_timeout =&gt; -1 =&gt; -1oci8.ping_interval =&gt; 60 =&gt; 60oci8.privileged_connect =&gt; Off =&gt; Offoci8.statement_cache_size =&gt; 20 =&gt; 20oci8.default_prefetch =&gt; 100 =&gt; 100oci8.old_oci_close_semantics =&gt; Off =&gt; Offoci8.connection_class =&gt; no value =&gt; no valueoci8.events =&gt; Off =&gt; OffStatistics =&gt;Active Persistent Connections =&gt; 0Active Connections =&gt; 0 cmd输入”php -r “var_dump(function_exists(‘oci_connect’));”” 1234C:\WINDOWS\system32&gt;php -r &quot;var_dump(function_exists(&apos;oci_connect&apos;));&quot;结果显示：bool(true) 则已成功。 注意idea需要重启电脑后方可使用oci8拓展的相关接口函数（我尝试过”synchronize”和”Invalidate Caches / Restart”功能，都无效），否则仍然会提示找不到动态链接库文件。也可能是因为我使用的是php内置的服务器问题，在此提一下。 赘述这个问题的存在不知道是xampp的锅还是这个php版本的锅，总而言之问题现在是解决了，算是有所收获吧，所以总结一下。其他版本若出现相似问题也可以参考。]]></content>
      <tags>
        <tag>php</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度网盘下载高速通道延时]]></title>
    <url>%2F2017%2F08%2F30%2F%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%8B%E8%BD%BD%E9%AB%98%E9%80%9F%E9%80%9A%E9%81%93%E5%BB%B6%E6%97%B6%2F</url>
    <content type="text"><![CDATA[前述百度网盘PC客户端下载有300秒的高速通道试用，而“300”不过是个存在内存中的数值，借助于 Cheat Engine 这样的内存扫描工具，我们可以任意修改其大小。 步骤 首先上 官 网 下载CheatEngine并安装。 打开百度网盘客户端 和 CheatEngine（以下简称CE）。CE左上角file下有个小电脑在闪烁，如图，打开它。 然后从程序列表里选择百度网盘客户端，如图，打开； 开始下载所需要的文件，然后点击试用高速通道； 立即切换到CE，在Value输入框中设定一个值，如257，当百度网盘高速通道试用时间变成257时，点击New Scan按钮对百度网盘客户端占用的内存进行扫描； 扫描后会发现左侧列表中会展示出很多查找到的内存地址，找到value一栏中的值和百度网盘客户端高速通道试用时间的值相同的一项，双击选中，到下面的操作栏中进行修改； 双击修改剩余时间，由于存放地址是4字节大小的内存，所以最大的值只能为(2^32)-1=4294967295，如果值比这个数大会导致溢出，CE会将其随机降为一个比4294967295小的较大值。 修改完成，可以关闭CE。 赘述CE这种内存扫描器其实有很多，我自己接触的第一款就是初中时候在Symbian系统上使用的“八门神器”，用来修改手机中小游戏的各种参数，弹药量、生命值之类。 以上方法只适用于有试用高速通道的时候，像有的时候没有试用高速通道的机会便没法进行加速。建议修改成较大的值，就算下载完毕之后不要马上关闭客户端（因为下次打开可能就没有试用高速通道的机会），高速通道的剩余时间仍会继续跑。 虽然有时间限制，但是可以持续修改且时间值可以设置较大。唯一的限制在于试用高速通道的机会。 我在学校内使用ipv6走高速通道可以达到将近2M，虽然没有跑满带宽，但是也好过三五百K的速度。 以上。]]></content>
      <tags>
        <tag>百度网盘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows热点不可用解决办法]]></title>
    <url>%2F2017%2F07%2F31%2Fwindows%E7%83%AD%E7%82%B9%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%2F</url>
    <content type="text"><![CDATA[问题现象该问题的现象表现为windows热点开启成功，且在移动端可以正确进行密码的认证，但就是无法连接上或是连接上之后无法上网（移动端此时已通过dhcp获取到ip）。 解决办法法一.首先想到的当然是对本地热点的重启，若重启后仍然无效，参考法二； 法二. 1.在网络适配器管理（控制面板\网络和 Internet\网络连接）中将你的热点连接禁用； 2.进设备管理器（win+x键调出选项栏后按M键选择设备管理器），菜单栏中“查看”选中“显示隐藏的设备”，在下面打开网络适配器一栏，会有一个图标带向下箭头（已被禁用）的 network virtual Adapter（虚拟网络适配器），不同的电脑因为网卡不同或者oem定制的问题可能会导致适配器名字不一样，根据具体情况自己选择。双击它，“启用设备”。 完成以上步骤后再启动自己的热点 赘述以上方法是我在遇到该问题后自己摸索出来的，在我的电脑上可解决问题。如果无法解决你所遇到的问题，建议搜索其他的解决办法。]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[(xrdp+vnc)远程桌面linux]]></title>
    <url>%2F2017%2F06%2F15%2Fxrdp-vnc%2F</url>
    <content type="text"><![CDATA[前述相信大家桌面远程linux服务器大多用的都是vnc（虽然对于linux系统桌面远程用的确实很少），这里提一下xrdp的优势，1.加密，vcn本身的传输是不加密的（可以借助于SSL实现）；2.因为xrdp实质上就是一个 rdp 服务器，所以我们在windows上只需要借助自带的mstsc就可以直连linxu桌面系统，因为都使用了rdp协议，很方便；3. 支持多用户登录；4.第四个优势…要说第四个优势的话……开源算么？（逃… 操作步骤安装xrdp+vncserver：1234567#CentOSyum install epel-releaseyum updateyum install xrdp tigervnc-server#Ubuntuapt-get updateapt-get install xrdp tigervnc-server 如果服务器桌面系统都没装的话，建议选择xfce一类轻量型桌面 12345678#CentOSyum groupinstall xfce4#Ubuntuapt-get install xubuntu-desktop#安装完成后运行systemctl set-default graphical.target #使系统默认从GUI启动#如果要恢复默认从CLI启动systemctl set-default multi-user.target #使系统默认从CLI启动 设置xrdp开机自启：123systemctl enable xrdp.service#启动xrdp服务systemctl start xrdp 如果xrdp报错的话可以参考 该链接 ，运行： 12345#Allow SElinux to allow:chcon --type=bin_t /usr/sbin/xrdpchcon --type=bin_t /usr/sbin/xrdp-sesman#Start it systemctl start xrdp 运行”vncserver”命令在当前用户家目录实例化vnc配置12#如果想以其他用户的身份连接远程连接，需要先使用su命令来切换用户vncserver 配置vncserver服务：1234cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:&lt;NUMBER&gt;.service#&lt;NUMBER&gt;为数字#将/etc/systemd/system/vncserver@:&lt;NUMBER&gt;.service中的&lt;USER&gt;替换为你的用户名，共两处。#如果是root用户的话，其中的家目录需要改为/root，而非/home/&lt;USER&gt; systemctl重新加载配置文件 1systemctl daemon-reload 防火墙允许服务注意iptables规则是否有拦截xrdp和vnc服务访问网络。 Centos7及以上上需要配置firewall允许xrdp和vnc:123firewall-cmd --permanent --zone=public --add-port=3389/tcp #允许xrdp（默认端口为3389）firewall-cmd --permanent --zone=public --add-service=vnc-serverfirewall-cmd --reload 启动vnc1systemctl start vncserver@:&lt;Nummer&gt;.service 赘述Windows上mstsc直连session需要选择xvnc 如果需要以root身份登录，则需要以root身份运行vncserver,配置vncserver@:{n}.service文件后，在/home目录创建root文件夹，将其链接到/root目录即可 若使用vnc客户端连接的话，分辨率可能会导致无法满屏显示，这时可以直接修改vnc的分辨率( 参考链接 )： 如果要使用的分辨率在现有的模式中没有的话，我们可以自己手动添加1.首先查询所需要参数，cvt 加分辨率例如我需要1366*768的分辨率，则输入“cvt 1366 768”，查询该分辨率的有效扫描频率是多少将Modeline “1368x768_60.00” 后面的“85.25 1368 1440 1576 1784 768 771 781 798 -hsync +vsync”参数复制2.创建所需的模式 1xrandr --newmode "模式名" + 上一步复制的参数 3.这时接使用刚刚创建的模式会提示找不到模式，需要手动添加一下 1xrandr --addmode 显示器名 "模式名" 创建成功：添加成功：4.使用新建模式 1xrandr --output 显示器名 --mode "模式名" 当前设置在重启后失效，可以将其写入配置文件保证设置永久有效 分辨率也可以通过vnc客户端设置，但是画质会受影响本文部分参考 该博文]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[拓展chrome插件json-viewer]]></title>
    <url>%2F2017%2F06%2F04%2F%E6%8B%93%E5%B1%95chrome%E6%8F%92%E4%BB%B6json-viewer%2F</url>
    <content type="text"><![CDATA[前述最近在学习维护学校iptv服务器时获得了电视墙缓存图片的json数据，chrome打开页面后jsonViewer无法格式化代码，如图（jsonViewer此时并没有启动，它并不格式化本地文件）： google上找了一下，发现了 网友自己拓展的json-viewer ，与 http://www.jsonohyeah.com/上的效果相近，不过可以本地格式化，省去联网了，觉得很好用。觉得样式丑的可以去github拉取代码自己改下样式（样式表在WebContent\viewer\index.html文件中），然后chrome打包拓展程序安装。 提醒注1：打包目录选择WebContent，否则会报错“清单文件缺失或不可读”注2：报错“指定扩展程序的私有密钥已存在。请重复使用该密钥，或者先删除它” 则删除 从github拉取得到的master分支下pem密钥文件即可。最终效果如图： 本人已修改样式且打包了的拓展程序在此注3：直接安装crx包可能会在之后因为安全问题被chrome永久禁用，解决办法有二,1.可以开启开发者模式，选择“加载已解压的拓展程序”，从JSONView-for-Chrome-master\WebContent文件夹直接安装源码， 这样安装后就不会有这种问题,但是每次打开chrome都会提醒你禁用开发者模式下安装的拓展。2.按照 该网址的方法二 进行操作，方法一我测试过，在我电脑上（win10）是无效的，我不知道问题在哪，可能是注册表键值的有效位置在win10上改动了。但是法二有个局限就是自win8开始组策略只在专业版及以上版本才有。以上。]]></content>
      <tags>
        <tag>chrome</tag>
        <tag>json</tag>
      </tags>
  </entry>
</search>
