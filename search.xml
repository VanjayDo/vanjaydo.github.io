<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[关于php下实现异步计划任务的一种方法]]></title>
      <url>/2017/09/10/%E5%85%B3%E4%BA%8Ephp%E4%B8%8B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在一个网络管理系统的实现过程中需要完成这样一个功能，老师在上课时通过交互界面将该教室的网络关闭，课程结束后系统将自动将教室网络开放，这有两方面的要求，首先是计划任务的实现：下课后自动恢复网络，这里使用循环来检查任务执行情况，因为如果全部都写到操作系统的计划任务中那就太繁重了（当然也可以只写一个系统的计划任务，将它和数据库结合起来实现，这是我最后采用的方法）；二就是老师提交“关闭网络”的请求时应当异步处理，因为计划任务是死循环，如果不进行异步处理则页面将永远处于加载状态直到用户强制阻断或任务执行结束。</p>
<a id="more"></a>
<h3 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h3><h4 id="计划任务唯一化"><a href="#计划任务唯一化" class="headerlink" title="计划任务唯一化"></a>计划任务唯一化</h4><p>因为一堂课上可能会多次切换网络状态，所以必须让当前教室的网络恢复计划任务唯一化，新的计划任务应当取代旧的，这里我使用文件flag的方式来实现：用$_SESSION[‘ID’]加上当前时间戳的方式来命名flag文件，$_SESSION[‘ID’]为用户ID，由于老师一堂课只能在一个教室上课，所以这是唯一的；当前时间戳（time()函数获取）精确到秒，足够保证用户在这个时间段内操作唯一。<br>每一次生成计划任务时我们都生成这样一个文件保存在flag文件夹中，并将文件名传给任务函数，让它去检查这个文件状态，存在的话则任务有效，否则终止任务；相对的，生成新任务时，我们把flag文件夹中的所有以当前$_SESSION[‘ID’]开头的flag文件全部删除，再生成新的任务和flag，这样旧的任务就会失效，由此保证任务的唯一性。</p>
<h4 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h4><p>这里是用fsockopen函数来实现异步，这样实现的好处就是有很大的自定义空间，例如相比于popen()函数的不可传递参数。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//user.php</span></div><div class="line"><span class="comment">//作用：用户交互界面，提交数据给set-network.php</span></div><div class="line"><span class="comment">//代码如下：</span></div><div class="line">$url = <span class="string">"http://localhost:8081/tch/set-network.php"</span>;</div><div class="line">sock_get($url, $_GET[<span class="string">"network"</span>], $_GET[<span class="string">"classroomName"</span>],$endTimestamp);</div><div class="line"><span class="comment">//fsockopen模拟get提交函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sock_get</span><span class="params">($url, $network, $classroomName, $endTimestamp)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//设置get提交的数据</span></div><div class="line">    $data = <span class="keyword">array</span>(</div><div class="line">        <span class="string">"network"</span> =&gt; $network,</div><div class="line">        <span class="string">"classroomName"</span> =&gt; $classroomName,</div><div class="line">        <span class="string">"endTimestamp"</span> =&gt; $endTimestamp);</div><div class="line">    $http_data = http_build_query($data);</div><div class="line">    $info = parse_url($url);</div><div class="line">    $fp = fsockopen($info[<span class="string">"host"</span>], $info[<span class="string">"port"</span>], $errno, $errstr, <span class="number">3</span>);</div><div class="line">    $head = <span class="string">"GET "</span> . $info[<span class="string">'path'</span>] . <span class="string">"?"</span> . $http_data . <span class="string">" HTTP/1.0\r\n"</span>;</div><div class="line">    $head .= <span class="string">"Host: "</span> . $info[<span class="string">'host'</span>] . <span class="string">":"</span> . $info[<span class="string">'port'</span>] . <span class="string">"\r\n"</span>;</div><div class="line">    $head .= <span class="string">"\r\n"</span>;</div><div class="line">    fputs($fp, $head);</div><div class="line">    fclose($fp);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//set-network.php</span></div><div class="line"><span class="comment">//作用：从用户操作接收数据用来生成计划任务</span></div><div class="line"><span class="comment">//代码如下：</span></div><div class="line"><span class="keyword">require</span> <span class="string">"restore-network.php"</span></div><div class="line"><span class="comment">//查找当前用户有无已存在的flag，有的话删除，即终止已存在的恢复网络计划任务</span></div><div class="line">$search = glob(<span class="string">"./flags/"</span> . $_SESSION[<span class="string">'ID'</span>] . <span class="string">"*"</span>);</div><div class="line"><span class="keyword">if</span> ($search) &#123;</div><div class="line">    <span class="keyword">foreach</span> ($search <span class="keyword">as</span> $item) &#123;</div><div class="line">        unlink($item);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$flag = <span class="string">"./flags/"</span> . $_SESSION[<span class="string">"ID"</span>] . time() . <span class="string">".flag"</span>;</div><div class="line">file_put_contents($flag, <span class="string">""</span>, FILE_APPEND);</div><div class="line">$schedule = <span class="keyword">new</span> restore_network();</div><div class="line">$schedule-&gt;keepWake($flag, $endTimestamp);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//restore-network.php</span></div><div class="line"><span class="comment">//作用：计划任务和恢复网络的功能实现</span></div><div class="line"><span class="comment">//代码如下：</span></div><div class="line">ignore_user_abort();<span class="comment">//关掉浏览器，PHP脚本也可以继续执行.</span></div><div class="line">set_time_limit(<span class="number">0</span>);<span class="comment">//设置不响应最长时间不受限制,让程序可以无限制的执行下去</span></div><div class="line"><span class="comment">//定时任务函数，不断循环来定时执行任务</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">keepWake</span><span class="params">($flagFile, $endTimestamp)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//当前时间戳比结束时间戳小则一直循环</span></div><div class="line">    <span class="keyword">while</span> (time() &lt; $endTimestamp) &#123;</div><div class="line">        <span class="comment">// 定时任务终止条件:本任务的flag文件不存在</span></div><div class="line">        <span class="keyword">if</span> (!file_exists($flagFile)) &#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">'process terminated'</span>);</div><div class="line">        &#125;</div><div class="line">        sleep(<span class="number">120</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//删除flag文件</span></div><div class="line">    unlink($flagFile);</div><div class="line">    <span class="comment">//执行恢复网络功能函数，这不是重点，在此忽略函数内容</span></div><div class="line">    <span class="keyword">$this</span>-&gt;restoreNet();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>尽管我最后用的并不是这种解决办法，因为考虑到万一web服务器软件宕掉的话那么这些计划任务都会丢失，我采用了将定时任务所需的参数存入数据库，再将一个php脚本写入操作系统计划任务中（如linux的crontab），每隔几分钟执行一遍，由这个脚本去数据库查询是否有到期的定时任务，有的话则调出数据进行执行，再数据库中相应的任务删除。整个过程可能考虑的不是很周到，只能算是一个实现目标的方法。</p>
]]></content>
      
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[php部分版本使用oci8拓展问题]]></title>
      <url>/2017/09/08/php%E9%83%A8%E5%88%86%E7%89%88%E6%9C%AC%E4%BD%BF%E7%94%A8oci8%E6%8B%93%E5%B1%95%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近在使用php实现从服务器Oracle数据库拉取数据表到本地mysql功能时遇到了这个问题：我使用的是xampp集成的php5.6.3版本，在它的php.ini配置文件中关于oci8拓展的配置是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">extension=php_oci8_12c.dll  ; Use with Oracle Database 12c Instant Client</div></pre></td></tr></table></figure></p>
<p>从Oracle官网下载instantclient-basic-nt-12.2.0.1.0.zip拓展，解压后我把得到的instantclient_12_2目录移动到C:\Program Files下并加入环境变量，但是idea运行项目时一直在报:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PHP Warning:  PHP Startup: Unable to load dynamic library &apos;C:\xampp\php\ext\php_oci8_12c.dll&apos;</div></pre></td></tr></table></figure></p>
<p>导致oci8接口函数，如oci_connect等无法使用。<br><a id="more"></a></p>
<h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><p>在把stack overflow翻了个遍之后找到了可行的解决办法——放弃php_oci8_12c.dll，将其更换为其他的版本。</p>
<h4 id="去pecl下载其他版本的OCI8-extension"><a href="#去pecl下载其他版本的OCI8-extension" class="headerlink" title="去pecl下载其他版本的OCI8 extension"></a>去pecl下载其他版本的OCI8 extension</h4><p><a href="http://pecl.php.net/package/oci8" target="_blank" rel="external">下载地址</a>，我选择了2.0.10版本，这是支持php5的最后一个版本，注：下载dll动态链接库文件需要点击”oci8-2.0.10.tgz (186.9kB)”链接后面的”（windows田字图形）DLL”链接，<a href="http://pecl.php.net/package/oci8/2.0.10/windows" target="_blank" rel="external">这是下载直达链接</a>，根据自己的php版本下载合适的。</p>
<h4 id="替换文件"><a href="#替换文件" class="headerlink" title="替换文件"></a>替换文件</h4><p>将解压后的下载文件移动到php拓展目录（即extension_dir）,然后在php.ini中加上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">extension=php_oci8_11g.dll</div></pre></td></tr></table></figure></p>
<p>去 <a href="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html" target="_blank" rel="external">Oracle官网</a>下载相应的instant client V11，解压后把目录添加进系统变量。</p>
<h4 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h4><p>cmd输入”PHP –ri oci8”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">C:\WINDOWS\system32&gt;PHP --ri oci8</div><div class="line"></div><div class="line">结果显示：</div><div class="line">oci8</div><div class="line"></div><div class="line">OCI8 Support =&gt; enabled</div><div class="line">OCI8 DTrace Support =&gt; disabled</div><div class="line">OCI8 Version =&gt; 2.0.8</div><div class="line">Revision =&gt; $Id: f04114d4d67cffea4cdc2ed3b7f0229c2caa5016 $</div><div class="line">Oracle Run-time Client Library Version =&gt; 11.2.0.1.0</div><div class="line">Oracle Compile-time Instant Client Version =&gt; 11.2</div><div class="line"></div><div class="line">Directive =&gt; Local Value =&gt; Master Value</div><div class="line">oci8.max_persistent =&gt; -1 =&gt; -1</div><div class="line">oci8.persistent_timeout =&gt; -1 =&gt; -1</div><div class="line">oci8.ping_interval =&gt; 60 =&gt; 60</div><div class="line">oci8.privileged_connect =&gt; Off =&gt; Off</div><div class="line">oci8.statement_cache_size =&gt; 20 =&gt; 20</div><div class="line">oci8.default_prefetch =&gt; 100 =&gt; 100</div><div class="line">oci8.old_oci_close_semantics =&gt; Off =&gt; Off</div><div class="line">oci8.connection_class =&gt; no value =&gt; no value</div><div class="line">oci8.events =&gt; Off =&gt; Off</div><div class="line"></div><div class="line">Statistics =&gt;</div><div class="line">Active Persistent Connections =&gt; 0</div><div class="line">Active Connections =&gt; 0</div></pre></td></tr></table></figure></p>
<p>cmd输入”php -r “var_dump(function_exists(‘oci_connect’));””</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">C:\WINDOWS\system32&gt;php -r &quot;var_dump(function_exists(&apos;oci_connect&apos;));&quot;</div><div class="line"></div><div class="line">结果显示：</div><div class="line">bool(true)</div></pre></td></tr></table></figure>
<p>则已成功。</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>idea需要重启电脑后方可使用oci8拓展的相关接口函数（我尝试过”synchronize”和”Invalidate Caches / Restart”功能，都无效），否则仍然会提示找不到动态链接库文件。也可能是因为我使用的是php内置的服务器问题，在此提一下。</p>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>这个问题的存在不知道是xampp的锅还是这个php版本的锅，总而言之问题现在是解决了，算是有所收获吧，所以总结一下。<br>其他版本若出现相似问题也可以参考。</p>
]]></content>
      
        
        <tags>
            
            <tag> php </tag>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[百度网盘下载高速通道延时]]></title>
      <url>/2017/08/30/%E7%99%BE%E5%BA%A6%E4%BA%91%E4%B8%8B%E8%BD%BD%E9%AB%98%E9%80%9F%E9%80%9A%E9%81%93%E5%BB%B6%E6%97%B6/</url>
      <content type="html"><![CDATA[<h3 id="前述"><a href="#前述" class="headerlink" title="前述"></a>前述</h3><p>百度网盘PC客户端下载有300秒的高速通道试用，而“300”不过是个存在内存中的数值，借助于 <a href="https://en.wikipedia.org/wiki/Cheat_Engine" target="_blank" rel="external"> Cheat Engine </a> 这样的内存扫描工具，我们可以任意修改其大小。<br><a id="more"></a></p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul>
<li>首先上 <a href="http://www.cheatengine.org/" target="_blank" rel="external"> 官 网 </a> 下载CheatEngine并安装。</li>
<li>打开百度网盘客户端 和 CheatEngine（以下简称CE）。CE左上角file下有个小电脑在闪烁，如图，打开它。<br><img src="/images/百度网盘下载高速通道延时/1.png" width="500px"></li>
<li>然后从程序列表里选择百度网盘客户端，如图，打开；<br><img src="/images/百度网盘下载高速通道延时/2.png"></li>
<li>开始下载所需要的文件，然后点击试用高速通道；</li>
<li><p>立即切换到CE，在Value输入框中设定一个值，如257，当百度网盘高速通道试用时间变成257时，点击New Scan按钮对百度网盘客户端占用的内存进行扫描；</p>
</li>
<li><p>扫描后会发现左侧列表中会展示出很多查找到的内存地址，找到value一栏中的值和百度网盘客户端高速通道试用时间的值相同的一项，双击选中，到下面的操作栏中进行修改；<br><img src="/images/百度网盘下载高速通道延时/4.png"></p>
</li>
<li><p>双击修改剩余时间，由于存放地址是4字节大小的内存，所以最大的值只能为(2^32)-1=4294967295，如果值比这个数大会导致溢出，CE会将其随机降为一个比4294967295小的较大值。<br><img src="/images/百度网盘下载高速通道延时/6.png"></p>
</li>
<li><p>修改完成，可以关闭CE。</p>
</li>
</ul>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>CE这种内存扫描器其实有很多，我自己接触的第一款就是初中时候在Symbian系统上使用的“八门神器”，用来修改手机中小游戏的各种参数，弹药量、生命值之类。</p>
<p>以上方法只适用于有试用高速通道的时候，像有的时候没有试用高速通道的机会便没法进行加速。建议修改成较大的值（注：发现如果在修改过一次的基础上修改第二次会将剩余时间卡死。实际并没有所谓，因为时间值足够大），就算下载完毕之后不要马上关闭客户端（因为下次打开可能就没有试用高速通道的机会），高速通道的剩余时间仍会继续跑。</p>
<p>虽然有时间限制，但是修改的值较大的话基本可以忽略这个限制。<br>可以说唯一的限制在于试用高速通道的机会。</p>
<p>我在学校内使用ipv6走高速通道网络状态好的时候速度还是挺让人满意的。<br><img src="/images/百度网盘下载高速通道延时/7.png"></p>
<p>以上。</p>
]]></content>
      
        
        <tags>
            
            <tag> 百度网盘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows热点不可用解决办法]]></title>
      <url>/2017/07/31/windows%E7%83%AD%E7%82%B9%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h3><p>该问题的现象表现为windows热点开启成功，<br>且在移动端可以正确进行密码的认证，但就是无法连接上或是连接上之后无法上网（移动端此时已通过dhcp获取到ip）。<br><a id="more"></a></p>
<p><img src="/images/windows热点不可用解决办法/开启成功.png" alt="开启成功"> </p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>法一.首先想到的当然是对本地热点的重启，若重启后仍然无效，参考法二；</p>
<p>法二.</p>
<p><li>1.在网络适配器管理（控制面板\网络和 Internet\网络连接）中将你的热点连接禁用；<br><img src="/images/windows热点不可用解决办法/禁用.png" alt="禁用"></li></p>
<p><li>2.进设备管理器（win+x键调出选项栏后按M键选择设备管理器），菜单栏中“查看”选中“显示隐藏的设备”，<br><img src="/images/windows热点不可用解决办法/设备管理器.png" alt="设备管理器"><br>在下面打开网络适配器一栏，会有一个图标带向下箭头（已被禁用）的 network virtual Adapter（虚拟网络适配器），不同的电脑因为网卡不同或者oem定制的问题可能会导致适配器名字不一样，根据具体情况自己选择。双击它，“启用设备”。<br><img src="/images/windows热点不可用解决办法/启用.png" alt="启用"></li></p>
<p>完成以上步骤后再启动自己的热点</p>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>以上方法是我在遇到该问题后自己摸索出来的，在我的电脑上可解决问题。<br>如果无法解决你所遇到的问题，建议搜索其他的解决办法。</p>
]]></content>
      
        
        <tags>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[(xrdp+vnc)远程桌面linux]]></title>
      <url>/2017/06/15/xrdp-vnc/</url>
      <content type="html"><![CDATA[<h3 id="前述"><a href="#前述" class="headerlink" title="前述"></a>前述</h3><p>相信大家桌面远程linux服务器大多用的都是vnc（虽然对于linux系统桌面远程用的确实很少），这里提一下xrdp的优势，1.加密，vcn本身的传输是不加密的（可以借助于SSL实现）；2.因为xrdp实质上就是一个<a href="https://zh.wikipedia.org/wiki/%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2%E5%8D%94%E5%AE%9A" target="_blank" rel="external"> rdp </a> 服务器，所以我们在windows上只需要借助自带的mstsc就可以直连linxu桌面系统，因为都使用了rdp协议，很方便；3. 支持多用户登录；4.第四个优势…要说第四个优势的话……开源算么？（逃…<br><a id="more"></a></p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><h4 id="安装xrdp-vncserver："><a href="#安装xrdp-vncserver：" class="headerlink" title="安装xrdp+vncserver："></a>安装xrdp+vncserver：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#CentOS</span></div><div class="line">yum install epel-release</div><div class="line">yum update</div><div class="line">yum install xrdp tigervnc-server</div><div class="line"><span class="comment">#Ubuntu</span></div><div class="line">apt-get update</div><div class="line">apt-get install xrdp tigervnc-server</div></pre></td></tr></table></figure>
<p>如果服务器桌面系统都没装的话，建议选择xfce一类轻量型桌面</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#CentOS</span></div><div class="line">yum groupinstall xfce4</div><div class="line"><span class="comment">#Ubuntu</span></div><div class="line">apt-get install xubuntu-desktop</div><div class="line"><span class="comment">#安装完成后运行</span></div><div class="line">systemctl <span class="built_in">set</span>-default graphical.target <span class="comment">#使系统默认从GUI启动</span></div><div class="line"><span class="comment">#如果要恢复默认从CLI启动</span></div><div class="line">systemctl <span class="built_in">set</span>-default multi-user.target <span class="comment">#使系统默认从CLI启动</span></div></pre></td></tr></table></figure>
<h4 id="设置xrdp开机自启："><a href="#设置xrdp开机自启：" class="headerlink" title="设置xrdp开机自启："></a>设置xrdp开机自启：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl <span class="built_in">enable</span> xrdp.service</div><div class="line"><span class="comment">#启动xrdp服务</span></div><div class="line">systemctl start xrdp</div></pre></td></tr></table></figure>
<p>如果xrdp报错的话可以参考 <a href="https://www.centos.org/forums/viewtopic.php?t=51875" target="_blank" rel="external"> 该链接 </a>，运行：<br></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Allow SElinux to allow:</span></div><div class="line">chcon --<span class="built_in">type</span>=bin_t /usr/sbin/xrdp</div><div class="line">chcon --<span class="built_in">type</span>=bin_t /usr/sbin/xrdp-sesman</div><div class="line"><span class="comment">#Start it </span></div><div class="line">systemctl start xrdp</div></pre></td></tr></table></figure>
<h4 id="运行”vncserver”命令在当前用户家目录实例化vnc配置"><a href="#运行”vncserver”命令在当前用户家目录实例化vnc配置" class="headerlink" title="运行”vncserver”命令在当前用户家目录实例化vnc配置"></a>运行”vncserver”命令在当前用户家目录实例化vnc配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#如果想以其他用户的身份连接远程连接，需要先使用su命令来切换用户</span></div><div class="line">vncserver</div></pre></td></tr></table></figure>
<h4 id="配置vncserver服务："><a href="#配置vncserver服务：" class="headerlink" title="配置vncserver服务："></a>配置vncserver服务：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:&lt;NUMBER&gt;.service</div><div class="line"><span class="comment">#&lt;NUMBER&gt;为数字</span></div><div class="line"><span class="comment">#将/etc/systemd/system/vncserver@:&lt;NUMBER&gt;.service中的&lt;USER&gt;替换为你的用户名，共两处。</span></div><div class="line"><span class="comment">#如果是root用户的话，其中的家目录需要改为/root，而非/home/&lt;USER&gt;</span></div></pre></td></tr></table></figure>
<h4 id="systemctl重新加载配置文件"><a href="#systemctl重新加载配置文件" class="headerlink" title="systemctl重新加载配置文件"></a>systemctl重新加载配置文件</h4> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure>
<h4 id="防火墙允许服务"><a href="#防火墙允许服务" class="headerlink" title="防火墙允许服务"></a>防火墙允许服务</h4><p>注意iptables规则是否有拦截xrdp和vnc服务访问网络。</p>
<h5 id="Centos7及以上上需要配置firewall允许xrdp和vnc"><a href="#Centos7及以上上需要配置firewall允许xrdp和vnc" class="headerlink" title="Centos7及以上上需要配置firewall允许xrdp和vnc:"></a>Centos7及以上上需要配置firewall允许xrdp和vnc:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --add-port=3389/tcp <span class="comment">#允许xrdp（默认端口为3389）</span></div><div class="line">firewall-cmd --permanent --zone=public --add-service=vnc-server</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h4 id="启动vnc"><a href="#启动vnc" class="headerlink" title="启动vnc"></a>启动vnc</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start vncserver@:&lt;Nummer&gt;.service</div></pre></td></tr></table></figure>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>Windows上mstsc直连session需要选择xvnc<br><img src="/images/xrdp+vnc/vnc-login.png" alt="注意选择"></p>

<p>如果需要以root身份登录，则需要以root身份运行vncserver,配置vncserver@:{n}.service文件后，在/home目录创建root文件夹，将其链接到/root目录即可</p>
<p>若使用vnc客户端连接的话，分辨率可能会导致无法满屏显示，这时可以直接修改vnc的分辨率(<a href="https://wiki.ubuntu.com/X/Config/Resolution" target="_blank" rel="external"> 参考链接 </a>)：<br></p>
<p>如果要使用的分辨率在现有的模式中没有的话，我们可以自己手动添加<br><br>1.首先查询所需要参数，cvt 加分辨率<br>例如我需要1366*768的分辨率，则输入“cvt 1366 768”，查询该分辨率的有效扫描频率是多少<br>将Modeline “1368x768_60.00” 后面的“85.25  1368 1440 1576 1784  768 771 781 798 -hsync +vsync”参数复制<br><img src="/images/xrdp+vnc/1cvt参数.png" alt="图1"><br><br>2.创建所需的模式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xrandr --newmode <span class="string">"模式名"</span>  + 上一步复制的参数</div></pre></td></tr></table></figure>
<p><img src="/images/xrdp+vnc/2创建新模式.png" alt="图2"><br><br>3.这时接使用刚刚创建的模式会提示找不到模式，需要手动添加一下<br></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xrandr --addmode 显示器名 <span class="string">"模式名"</span></div></pre></td></tr></table></figure>
<p>创建成功：<br><img src="/images/xrdp+vnc/3创建新模式成功.png" alt="图3"><br><br>添加成功：<br><img src="/images/xrdp+vnc/3添加模式成功.png" alt="图3"><br><br>4.使用新建模式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xrandr --output 显示器名 --mode <span class="string">"模式名"</span></div></pre></td></tr></table></figure>
<p><img src="/images/xrdp+vnc/修改vnc分辨率.png" alt="使用"><br>当前设置在重启后失效，可以将其写入配置文件保证设置永久有效</p>
<p>分辨率也可以通过vnc客户端设置，但是画质会受影响<br>本文部分参考<a href="http://misliang.blog.51cto.com/6973084/1533172" target="_blank" rel="external"> 该博文 </a></p>
]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sublime下markdown环境配置]]></title>
      <url>/2017/06/06/sublime%E4%B8%8Bmarkdown%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>因为用的挺顺手的，所以推荐一下。<br>我在sublime上编写markdown文档的环境配置是:</p>
<p><strong><em> Markdown Editing + OmniMarkupPreviewer + Markdown Extended + Monokai Extended </em></strong><br><a id="more"></a></p>
<h4 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h4><p><a href="https://github.com/SublimeText-Markdown/MarkdownEditing" target="_blank" rel="external">MarkdownEditing</a>作为sublime上编写Markdown必备的插件，不仅可以高亮显示Markdown语法还支持很多编程语言的语法高亮显示（需要主题支持）。</p>
<p><a href="https://github.com/timonwong/OmniMarkupPreviewer" target="_blank" rel="external">OmniMarkupPreviewer</a>用来渲染和预览markdown文档的效果。</p>
<p>这两个插件安装完了以后我们在编写markdown时会发现Markdown文档在Sublime中是默认无高亮的，而且很多主题也不支持Markdown的高亮，而<br><a href="https://github.com/jonschlinkert/sublime-monokai-extended" target="_blank" rel="external">Monokai Extended</a>和<a href="https://github.com/jonschlinkert/sublime-markdown-extended" target="_blank" rel="external">Markdown Extended </a>的组合很好的解决了这个问题。</p>
<p>以上插件都安装完成后，重启sublime，然后在preferences-&gt;color scheme-&gt;Monokai Extended 选择一项你顺眼的作为配色模式，再将Markdown Extended选为markdown文档的语法规则即可（view-&gt;systax-&gt;open all with current extension as 如图）：</p>
<p><img src="/images/sublime下markdown环境配置/markdownExtended.png" alt="选择markdown extended"></p>
<h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><ul>
<li>1.具体的markdown语法可以参照wowubuntu上的 <a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">这一篇文章</a></li>
<li>2.插件使用的小技巧去搜一下就有了，在此就不赘述了</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[拓展chrome插件json-viewer]]></title>
      <url>/2017/06/04/%E6%8B%93%E5%B1%95chrome%E6%8F%92%E4%BB%B6json-viewer/</url>
      <content type="html"><![CDATA[<h3 id="前述"><a href="#前述" class="headerlink" title="前述"></a>前述</h3><p>最近在学习维护学校iptv服务器时获得了电视墙缓存图片的json数据，chrome打开页面后jsonViewer无法格式化代码，<br><a id="more"></a><br>如图（jsonViewer此时并没有启动，它并不格式化本地文件）：</p>
<p><img src="/images/拓展chrome插件json-viewer/json.png" alt="json.png"></p>
<p>google上找了一下，发现了 <a href="http://www.aneasystone.com/archives/2015/07/second-chrome-extension-jsonview-enhencement.html" target="_blank" rel="external"> 网友自己拓展的json-viewer </a>，与 <a href="http://www.jsonohyeah.com/" target="_blank" rel="external">http://www.jsonohyeah.com/</a>上的效果相近，不过可以本地格式化，省去联网了，觉得很好用。<br>觉得样式丑的可以去github拉取代码自己改下样式（样式表在WebContent\viewer\index.html文件中），然后chrome打包拓展程序安装。</p>
<h3 id="提醒"><a href="#提醒" class="headerlink" title="提醒"></a>提醒</h3><p><strong>注1：</strong>打包目录选择WebContent，否则会报错“清单文件缺失或不可读”<br><strong>注2：</strong>报错“指定扩展程序的私有密钥已存在。请重复使用该密钥，或者先删除它” 则删除 从github拉取得到的master分支下pem密钥文件即可。最终效果如图：<br><img src="/images/拓展chrome插件json-viewer/finish.png" alt="效果图"></p>
<p><a href="https://github.com/VanjayDo/JSONView-for-Chrome" target="_blank" rel="external">本人已修改样式且打包了的拓展程序在此</a><br><br><br><strong>注3：</strong>直接安装crx包可能会在之后因为安全问题被chrome永久禁用，解决办法有二,1.可以开启开发者模式，选择“加载已解压的拓展程序”，从JSONView-for-Chrome-master\WebContent文件夹直接安装源码，<br> <img src="/images/拓展chrome插件json-viewer/源码安装.png" alt="源码安装"><br>这样安装后就不会有这种问题,但是每次打开chrome都会提醒你禁用开发者模式下安装的拓展。2.按照 <a href="http://www.9sep.org/chrome-install-third-party-extensions" target="_blank" rel="external">该网址的方法二</a> 进行操作，方法一我测试过，在我电脑上（win10）是无效的，我不知道问题在哪，可能是注册表键值的有效位置在win10上改动了。但是法二有个局限就是自win8开始组策略只在专业版及以上版本才有。<br>以上。</p>
]]></content>
      
        
        <tags>
            
            <tag> chrome </tag>
            
            <tag> json </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[web应用从网页插入中文到mysql变成乱码的解决办法]]></title>
      <url>/2017/03/12/web%E5%BA%94%E7%94%A8%E4%BB%8E%E7%BD%91%E9%A1%B5%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E5%88%B0mysql%E5%8F%98%E6%88%90%E4%B9%B1%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>相信既然这么进来了，那么问题肯定是差不多的，下面直接讲述解决办法：<br><a id="more"></a></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="首先在mysql配置文件my-ini中进行配置修改"><a href="#首先在mysql配置文件my-ini中进行配置修改" class="headerlink" title="首先在mysql配置文件my.ini中进行配置修改"></a>首先在mysql配置文件my.ini中进行配置修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#搜索找到[mysqld]，在它下面添加配置，如下</div><div class="line">[mysqld]</div><div class="line">character-set-server = utf8</div><div class="line"></div><div class="line">#搜索找到[mysql]，在它下面添加配置，如下</div><div class="line">[mysql]</div><div class="line">default-character-set = utf8</div></pre></td></tr></table></figure>
<h4 id="修改连接编码和中文字段编码"><a href="#修改连接编码和中文字段编码" class="headerlink" title="修改连接编码和中文字段编码"></a>修改连接编码和中文字段编码</h4><p>接下来我是从phpmyadmin上操作的，如果你没有可视化操作界面，那就转换成sql语句来操作吧。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> <span class="keyword">names</span> <span class="string">"uft8"</span>;</div></pre></td></tr></table></figure>
<p>再将所有需要插入中文的字段进行结构修改：<br>例如下面的message字段<br><img src="/images/web应用从网页插入中文到mysql变成乱码的解决办法/修改.png" alt="修改结构"></p>
<p>将排序规则修改为utf8_general_ci</p>
<p><img src="/images/web应用从网页插入中文到mysql变成乱码的解决办法/utf8.png" alt="排序规则"></p>
<h3 id="赘述"><a href="#赘述" class="headerlink" title="赘述"></a>赘述</h3><p>我曾多次遇到这种问题都是这么解决的，也曾利用修改排序规则的方法帮同学结果过类似问题，在此仅供参考。</p>
]]></content>
      
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
